# -*- Makefile -*-
BTARGET	 = $(TARGET).bc
OTARGET	 = $(TARGET).exe
BLTARGET = $(TARGET).cma
BNTARGET = $(TARGET).cmxa
STARGET	 = $(OTARGET)

#########################
## Tools configuration ##
#########################

OPAM = opam

DUNE = dune

HEADACHE = headache

# Macros to run tests locally.
check_cmd = $(MAKE) -C tests/$(1) check
check_log_cmd = VERBOSE=1 $(call check_cmd,$(1)) > $(1).log
install_tests_cmd = cp examples/$(1)/*.$(1) examples/$(1)/*.expected	\
			tests/$(1)/$(2)/good

# Test suite variables.
TESTS = hopix fopix

#########
# Rules #
#########

.PHONY: configure all-generic byte opt clean install uninstall headers	\
	clear byte-debug all-debug check $(TESTS) install-tests dependencies

all-generic: configure clear $(STARGET) $(TARGET)

dependencies:
	$(OPAM) update -y
	$(OPAM) pin add -k path -y flap .

$(TARGET):
	ln -s $(STARGET) $(TARGET)

clear:
	rm -f $(STARGET)

opt: $(OTARGET)
	@ $(DUNE) build src/$<

byte: $(BTARGET)
	@ $(DUNE) build src/$<

%:
	@ $(DUNE) build src/$@
	ln -s _build/default/src/$@ $@

byte-debug: byte
	rm -f $(STARGET)
	ln -s $(BTARGET) $(STARGET)

ifeq ($(strip $(PREFIX)),)
install uninstall:
	@echo "Cannot (un)install $(EXECUTABLE): "	\
		"the PREFIX variable is undefined."	\
	&& false
else
install: $(EXECUTABLE)
	mkdir -p $(PREFIX)/bin/
	install $(STARGET) $(PREFIX)/bin/$(TARGET)
uninstall:
	/bin/rm -f $(PREFIX)/bin/$(TARGET)
endif

all-debug: byte-debug $(TARGET)

# Run all the test suites locally.
check: $(TESTS)

# Run individually a test suite locally.
$(TESTS): all-debug install-tests
ifeq ($(LOG), yes)
	$(call check_log_cmd,$@)
else
	$(call check_cmd,$@)
endif

install-tests:
	$(call install_tests_cmd,hopix,compiler-hobix)
	$(call install_tests_cmd,hopix,compiler-fopix)
	$(call install_tests_cmd,hopix,compiler-retrolix)
	$(call install_tests_cmd,hopix,compiler-mips)
	$(call install_tests_cmd,fopix,interpreter)
	$(call install_tests_cmd,fopix,compiler-javix)
	$(call install_tests_cmd,fopix,compiler-anfix)
	$(call install_tests_cmd,fopix,compiler-kontix)
	$(call install_tests_cmd,fopix,compiler-jakix)

#######################
# Administrative part #
#######################

headers:
	for i in src/*.ml src/*.mli src/*.mly; do \
	   $(HEADACHE) -h admin/header -c admin/headache.cfg $$i; \
	done

clean:
	@ $(DUNE) clean
	find . -name '*~' -exec rm '{}' \;
	rm -fr *~ $(TARGET) $(BTARGET) $(OTARGET)
