type option = None | Some (int)

fun some (x) =
  Some (x)

val none =
  None

fun return (x) =
  Some (x)

fun bind (m, f) =
  m ? { None => None | Some (x) => f (x) }

fun fail (x) =
  none

fun try_catch (m, on_error) =
  m ? { None => on_error (0) | Some (x) => return (x) }

fun div (m, n) =
  if n = 0 then fail (0) else return (m / n)

fun print_div (m, n) =
  try_catch (
    bind (div (m, n), \(r) => (
      print_int (r);
      print_string ("!\n");
      return (0))
    ), \(x) =>
    print_string ("Error!\n")
  )

val main =
  print_div (3, 2);
  print_div (3, 0)
