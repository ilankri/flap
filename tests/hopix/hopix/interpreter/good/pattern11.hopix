type t = A | B (int) | C (int, int) | D (t, t)
type list = Nil | Cons (int, list)

val a = A
val b1 = B (1)
val c12 = C (1, 2)
val dab = D (a, b1)

fun f (x) =
  x ? {
  | A => print_string ("an A!\n")
  | B (_) => print_string ("a B\n")
  | C (_, _) => print_string ("a C!\n")
  | D (_, _) => print_string ("a D!\n")
  }

val n = Nil
fun c (x, xs) = Cons (x, xs)

fun iter (f, l) =
  l ? {
  | Cons (x, Nil) => f (x)
  | Cons (x, xs) => (f (x); iter (f, xs))
  }

val l = c (a, c (b1, c (c12, c (dab, n))))

val main = iter (f, l)
