type list ('a) = Nil | Cons ('a, list ('a))

fun range (i : int, j : int) : list (int) =
  if i > j then Nil[int] else Cons[int] (i, range (i + 1, j))

fun fold['a, 'b] (f : 'b * 'a -> 'b, acc : 'b, l : list ('a)) : 'b =
  l ?
  | Nil => acc
  | Cons (h : 'a, t : list ('a)) => fold['a, 'b] (f, f (acc, h), t)

val main =
  print_int (
    fold[int, int] (\(acc : int, x : int) => acc + x, 0, range (1, 10))
  )
